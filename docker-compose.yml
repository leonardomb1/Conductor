services:
  database:
    image: 'postgres:latest'
    hostname: conductor-db
    ports:
      - 15432:5432
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - conductor-network
    volumes:
      - ${PWD}/db/:/var/lib/postgresql/data/
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 3s
      timeout: 5s
      retries: 5

  api:
    image: conductor:0.0.1
    hostname: conductor-api
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - CONNECTION_STRING=Server=conductor-db;Port=5432;Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - PORT_NUMBER=${PORT_NUMBER}
      - DB_TYPE=${DB_TYPE}
      - SPLITTER_CHAR=${SPLITTER_CHAR}
      - ENABLE_LOG_DUMP=${ENABLE_LOG_DUMP}
      - LOG_DUMP_TIME_SEC=${LOG_DUMP_TIME_SEC}
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - SESSION_TIME_SEC=${SESSION_TIME_SEC}
      - API_KEY=${API_KEY}
      - MAX_DEGREE_PARALLEL=${MAX_DEGREE_PARALLEL}
      - MAX_CONSUMER_FETCH=${MAX_CONSUMER_FETCH}
      - MAX_CONSUMER_ATTEMPT=${MAX_CONSUMER_ATTEMPT}
      - MAX_PRODUCER_LINECOUNT=${MAX_PRODUCER_LINECOUNT}
      - LDAP_DOMAIN=${LDAP_DOMAIN}
      - LDAP_SERVER=${LDAP_SERVER}
      - LDAP_PORT=${LDAP_PORT}
      - LDAP_BASEDN=${LDAP_BASEDN}
      - LDAP_GROUPDN=${LDAP_GROUPDN}
      - LDAP_GROUPS=${LDAP_GROUPS}
      - LDAP_SSL=${LDAP_SSL}
      - LDAP_VERIFY_CERTIFICATE=${LDAP_VERIFY_CERTIFICATE}
      - NODES=${NODES}
      - USE_HTTPS=${USE_HTTPS}
      - TCP_ALLOWED_IPS=${TCP_ALLOWED_IPS}
      - HTTP_ALLOWED_IPS=${HTTP_ALLOWED_IPS}
      - ALLOWED_CORS=${ALLOWED_CORS}
      - BULK_TIMEOUT_SEC=${BULK_TIMEOUT_SEC}
      - DEVELOPMENT_MODE=${DEVELOPMENT_MODE}
      - DEBUG_DETAILED_ERROR=${DEBUG_DETAILED_ERROR}
      - CONNECTION_TIMEOUT_MIN=${CONNECTION_TIMEOUT_MIN}
      - MAX_CONCURRENT_CONNECTIONS=${MAX_CONCURRENT_CONNECTIONS}
      - RESPONSE_CACHING_LIMIT_MB=${RESPONSE_CACHING_LIMIT_MB}
      - MAX_LOG_QUEUE_SIZE=${MAX_LOG_QUEUE_SIZE}
      - REQUIRE_AUTHENTICATION=${REQUIRE_AUTHENTICATION}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - VERIFY_CONNECTION_ORIGIN=${VERIFY_CONNECTION_ORIGIN}
      - MAX_QUERY_PARAMS=${MAX_QUERY_PARAMS}
      - CERTIFICATE_PASSWORD=${CERTIFICATE_PASSWORD}
      - CERTIFICATE_PATH=${CERTIFICATE_PATH}
      - INDEX_FILEGROUP_NAME=${INDEX_FILEGROUP_NAME}
      - ENCRYPT_INDICATOR_BEGIN=${ENCRYPT_INDICATOR_BEGIN}
      - ENCRYPT_INDICATOR_END=${ENCRYPT_INDICATOR_END}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - conductor-network
    ports:
      - '22000:${PORT_NUMBER}'

networks:
  conductor-network:
    driver: bridge
